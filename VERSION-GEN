#!/bin/bash
########################################################################
#
# Copyright 2016 Keith Busch
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Forked off of nvme-cli:
#   https://github.com/linux-nvme/nvme-cli/
#
########################################################################

ROOTDIR=$(dirname "$0")
OBJDIR=${OBJDIR:-build}
DOCDIR=${DOCDIR:-$ROOTDIR/doc}
GVF=$OBJDIR/version.h
MVF=$OBJDIR/version.mk
DEF_VER=???

LF='
'

# First see if there is a version file (included in release tarballs),
# then try git-describe, then default.
if test -f $ROOTDIR/version; then
	VN=$(cat version) || VN="$DEF_VER"
elif test -d $ROOTDIR/.git -o -f $ROOTDIR/.git; then
    VN=$(git describe --always --tags --match "v[0-9]*" HEAD 2>/dev/null)

    git update-index -q --refresh
    test -z "$(git diff-index --name-only HEAD --)" ||
        VN="$VN-dirty"
else
	VN="$DEF_VER"
fi

VN=$(expr "$VN" : v*'\(.*\)')
MVN=$(expr "$VN" : v*'\([0-9.]*\)')
RVN=$(expr "$VN" : v*'[0-9.]*[-~]\(.*\)')
RDVN=1

# Convert a 'git describe' version to something that makes rpm versioning
# happy:
#    4.2-rc1-26-ge1dc405 => 4.2~rc1_26HPE
#    0.5.17.g8e16 => 0.5_17HPE
HPE_VN_1=$(echo "$RVN" | sed -e 's/\([0-9][0-9]*\)\-g.*$/\1HPE/' -e 's/\-/_/g')
if [[ -n $HPE_VN_1 && ! $HPE_VN_1 =~ ^_ ]]
then
    HPE_TAG="$MVN-${HPE_VN_1}"
    sep="_"
    [[ $HPE_VN_1 =~ ^[A-Za-z] ]] && sep="~"
    HPE_VN="$MVN$sep${HPE_VN_1}"
else
    HPE_TAG="$HPE_VN_1"
    HPE_VN="$MVN${HPE_VN_1}"
fi

VN_RE='^([0-9]+)\.([0-9]+)(.([0-9]+))?(-rc[0-9]+)?(-([0-9]+)-g([A-Za-z0-9]+))?'
if [[ $VN =~ $VN_RE ]]; then
    MAJOR=${BASH_REMATCH[1]}
    MINOR=${BASH_REMATCH[2]}
    PATCH=${BASH_REMATCH[4]}
    if [[ "$PATCH" -eq "" ]]; then
        PATCH=0
    fi
    SINCE_TAG=${BASH_REMATCH[7]}
    if [[ "$SINCE_TAG" -eq "" ]]; then
        SINCE_TAG=0
    fi
else
    MAJOR=0
    MINOR=0
    SINCE_TAG=0
fi


if test -d $OBJDIR; then

	if test -r $GVF; then
		VC=$(head -n1 $GVF | sed -e 's/^#define VERSION //')
		VC="${VC%\"}"
		VC="${VC#\"}"
	else
		VC=unset
	fi

	test "$VN" = "$VC" || {
		echo "  VER   $HPE_VN"
		echo "#define VERSION \"$HPE_VN\"" >$GVF
		echo "#define MAJOR $MAJOR" >>$GVF
		echo "#define MINOR $MINOR" >>$GVF
		echo "#define PATCH $PATCH" >>$GVF
		echo "#define SINCE_TAG $SINCE_TAG" >>$GVF

		echo "VERSION=$HPE_VN" >$MVF
		echo "FULL_VERSION=$VN" >>$MVF
		echo "MAJOR_VER=$MAJOR" >>$MVF
		echo "RELEASE=$RDVN" >>$MVF
		echo "RELEASE_TAG=$HPE_TAG" >>$MVF
	}
fi

echo "PROJECT_NUMBER = \"$HPE_VN\"" > $DOCDIR/version
